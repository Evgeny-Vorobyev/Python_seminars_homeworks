# Задача 10: На столе лежат n монеток. Некоторые из них лежат вверх решкой, а некоторые – гербом.
# Определите минимальное число монеток, которые нужно перевернуть, чтобы все монетки были повернуты вверх одной и той же стороной.
# Выведите минимальное количество монет, которые нужно перевернуть

def min_coin_flips(coins):

    if len(coins) == 0:
        return "Список монеток пуст."

    heads = coins.count("H")
    tails = coins.count("T")
    flips = min(heads, tails)

    return flips

coins = input("Введите состояние монеток (H - решка, T - герб): ").upper().split()
result = min_coin_flips(coins)
print("Минимальное количество монет, которые нужно перевернуть:", result)





# Задача 12: Петя и Катя – брат и сестра. Петя – студент, а Катя – школьница. Петя помогает Кате по математике.
# Он задумывает два натуральных числа X и Y (X,Y≤1000), а Катя должна их отгадать.
# Для этого Петя делает две подсказки. Он называет сумму этих чисел S и их произведение P. Помогите Кате отгадать задуманные Петей числа.


def find_numbers(s, p):
    for x in range(1, s + 1):
        if p % x == 0:
            y = p // x
            if x + y == s:
                return x, y

    return None

s = int(input("Введите сумму чисел (S): "))
p = int(input("Введите произведение чисел (P): "))

result = find_numbers(s, p)

if result:
    print("Задуманные числа:", result[0], result[1])
else:
    print("Числа не найдены.")




# Задача 14: Требуется вывести все целые степени двойки (т.е. числа вида 2k), не превосходящие числа N.


def print_powers_of_two(n):
    power = 0
    while 2 ** power <= n:
        print(2 ** power)
        power += 1

n = int(input("Введите число N: "))

print_powers_of_two(n)



